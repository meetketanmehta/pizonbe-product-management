service: product-management

custom:
  secrets: ${file(secrets.json)}

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${self:custom.secrets.APP_ENV_DEV}
  environment:
    DB_URI: ${self:custom.secrets.DB_URI}
    DB_NAME: ${self:custom.secrets.DB_NAME}
    DB_CATEGORIES_COLLECTION: ${self:custom.secrets.DB_CATEGORIES_COLLECTION}
    DB_PRODUCTS_COLLECTION: ${self:custom.secrets.DB_PRODUCTS_COLLECTION}
    DB_PRODUCTS_PRICE_COLLECTION: ${self:custom.secrets.DB_PRODUCTS_PRICE_COLLECTION}
    JWT_SECRET: ${self:custom.secrets.JWT_SECRET}


functions:
  getCategories:
    handler: functions/category-manager.getCategories
    events:
      - http:
          path: categories
          method: get
          cors: true
  getSubCategories:
    handler: functions/category-manager.getSubCategories
    events:
      - http:
          path: subCategories
          method: get
          cors: true

  getBrands:
    handler: functions/product-manager.getBrands
    events:
      - http:
          path: brands
          method: get
          cors: true
  addProduct:
    handler: functions/product-manager.addProduct
    events:
      - http:
          path: addProduct
          method: post
          cors: true
  approveProduct:
    handler: functions/product-manager.approveProduct
    events:
      - http:
          path: approveProduct
          method: post
          cors: true
  getProducts:
    handler: functions/product-manager.getProducts
    events:
      - http:
          path: getProducts
          method: get
          cors: true
      - http:
          path: getProducts/{category}
          method: get
          cors: true
      - http:
          path: getProducts/{category}/{subCategory}
          method: get
          cors: true
  getUnApprovedProducts:
    handler: functions/product-manager.getUnApprovedProducts
    events:
      - http:
          path: getUnApprovedProducts
          method: get
          cors: true
      - http:
          path: getUnApprovedProducts/{category}
          method: get
          cors: true
      - http:
          path: getUnApprovedProducts/{category}/{subCategory}
          method: get
          cors: true

  addPrice:
    handler: functions/price-manager.addPrice
    events:
      - http:
          path: addPrice
          method: post
          cors: true
  getPrice:
    handler: functions/price-manager.getPrice
    events:
      - http:
          path: getPrice/{proId}
          method: get
          cors: true

plugins:
  - serverless-mocha-plugin
  - serverless-offline