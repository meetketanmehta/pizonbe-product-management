service: product-management

custom:
  secrets: ${file(secrets.json)}

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${self:custom.secrets.APP_ENV_DEV}
  environment:
    DB_URI: ${self:custom.secrets.DB_URI}
    DB_NAME: ${self:custom.secrets.DB_NAME}
    DB_COLL_CATEGORY: ${self:custom.secrets.DB_COLL_CATEGORY}
    DB_PRODUCTS_COLLECTION: ${self:custom.secrets.DB_PRODUCTS_COLLECTION}
    JWT_SECRET: ${self:custom.secrets.JWT_SECRET}

functions:
  getAllCategories:
    handler: functions/category-manager.getAllCategories
    events:
      - http:
          path: getAllCategories
          method: get
          cors: true
  getAllDB:
    handler: functions/category-manager.getAllDB
    events:
      - http:
          path: getAllDB
          method: get
          cors: true
  getSubCategory:
    handler: functions/category-manager.getSubCategory
    events:
      - http:
          path: getSubCategory/{category}
          method: get
          cors: true
  addSubCategory:
    handler: functions/category-manager.addSubCategory
    events:
      - http:
          path: addSubCategory
          method: post
          cors: true
  addCategory:
    handler: functions/category-manager.addCategory
    events:
      - http:
          path: addCategory
          method: post
          cors: true

  addProduct:
    handler: functions/product-manager.addProduct
    events:
      - http:
          path: addProduct
          method: post
          cors: true
  approveProduct:
    handler: functions/product-manager.approveProduct
    events:
      - http:
          path: approveProduct
          method: post
          cors: true